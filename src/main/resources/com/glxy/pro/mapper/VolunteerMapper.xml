<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.glxy.pro.mapper.VolunteerMapper">

    <select id="getVolunteerById" resultType="com.glxy.pro.bo.VolunteerBo">
        select v.stu_id     as stuId,
               v.major_id   as majorId,
               m.major_name as majorName,
               v.which      as which
        from volunteer v
                 left join major m using (major_id)
        where stu_id = #{stuId}
        order by which;
    </select>

    <delete id="removeBatchByStuIds">
        DELETE FROM volunteer
        WHERE stu_id IN
        <foreach collection="list" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>

    <select id="getUnFillStuByCateId" resultType="com.glxy.pro.bo.StudentBo">
        SELECT DISTINCT s.stu_id        AS stuId,
                        s.stu_name      AS name,
                        s.stu_sex       AS sex,
                        CASE s.stu_sex
                            WHEN 0 THEN '男'
                            WHEN 1 THEN '女'
                            END         AS sexString,
                        s.stu_grade     AS grade,
                        s.category_id   AS categoryId,
                        c.category_name AS category,
                        s.stu_class     AS stuClass,
                        s.stu_score     AS score
        FROM student s
                 JOIN category c ON s.category_id = c.category_id
        WHERE s.category_id = #{cateId}
          AND s.stu_grade = #{grade}
          <if test="stuName != null and stuName != '' ">
              AND s.stu_name LIKE "%"#{stuName}"%"
          </if>
          AND s.stu_id NOT IN (SELECT stu_id
                               FROM volunteer v
                               WHERE v.stu_id = s.stu_id);
    </select>

    <select id="getFillCountByCateId" resultType="java.lang.Integer">
        SELECT COUNT(*)
        FROM student s
        WHERE s.category_id = #{cateId}
          AND s.stu_id IN (SELECT stu_id
                           FROM volunteer v
                           WHERE v.stu_id = s.stu_id);
    </select>

    <select id="getVolunteerByPagesAndConditions" resultType="com.glxy.pro.DTO.VolunteerDTO">
        SELECT
        s.stu_id AS stuId,
        s.stu_name AS name,
        s.stu_grade AS grade,
        c.category_name AS category,
        s.stu_class AS stuClass,
        v.which AS which,
        m.major_name AS majorName
        FROM student s
        LEFT JOIN category c USING (category_id)
        LEFT JOIN volunteer v USING (stu_id)
        LEFT JOIN major m USING (major_id)
        <where>
            <if test="query.categoryId != null and query.categoryId != '' ">
                AND s.category_id = #{query.categoryId}
            </if>
            <if test="query.name != null and query.name != '' ">
                AND s.stu_name LIKE "%"#{query.name}"%"
            </if>
            <if test="query.majorName != null and query.majorName != ''">
                AND m.major_name = #{query.majorName}
            </if>
            <if test="query.grade != null and query.grade != '' ">
                AND s.stu_grade = #{query.grade}
            </if>
            <if test="query.stuIds != null">
                AND s.stu_id IN
                <foreach collection="query.stuIds" item="id" open="(" separator="," close=")">
                    #{id}
                </foreach>
            </if>
        </where>
        <if test="query.sortBy != null and query.sortBy != ''">
            <choose>
                <when test="query.isAsc">
                    ORDER BY s.stu_id ASC, ${query.sortBy} ASC
                </when>
                <otherwise>
                    ORDER BY s.stu_id ASC, ${query.sortBy} DESC
                </otherwise>
            </choose>
        </if>
#         ORDER BY s.stu id Asc, v.which ASC
        LIMIT #{begin}, #{query.pageSize}
    </select>

    <select id="queryVolunteerCount" resultType="java.lang.Integer">
        select count(*)
        FROM student s
        LEFT JOIN category c USING (category_id)
        LEFT JOIN volunteer v USING (stu_id)
        LEFT JOIN major m USING (major_id)
        <where>
            <if test="categoryId != null and categoryId != '' ">
                AND s.category_id = #{categoryId}
            </if>
            <if test="name != null and name != '' ">
                AND s.stu_name LIKE "%"#{name}"%"
            </if>
            <if test="majorName != null and majorName != ''">
                AND m.major_name = #{majorName}
            </if>
            <if test="grade != null and grade != '' ">
                AND s.stu_grade = #{grade}
            </if>
            <if test="stuIds != null">
                AND s.stu_id IN
                <foreach collection="stuIds" item="id" open="(" separator="," close=")">
                    #{id}
                </foreach>
            </if>
        </where>
    </select>

    <select id="getByCategoryIdAndLib" resultType="com.glxy.pro.bo.VolunteerBo">
        select v.stu_id as stuId,
        v.major_id as majorId,
        m.major_name as majorName,
        v.which as which
        from volunteer v
        left join major m using (major_id)
        <where>
            <if test="categoryId != null and categoryId != ''">
                AND v.stu_id IN (SELECT stu_id
                FROM student
                WHERE category_id = #{categoryId})
            </if>
            <if test="lib != null">
                AND v.stu_id IN (SELECT stu_id
                FROM gaokao
                WHERE sci_lib = #{lib})
            </if>
            <if test="grade != null and grade != ''">
                AND v.stu_id IN (select stu_id
                from student
                where stu_grade = #{grade})
            </if>
        </where>
    </select>
</mapper>
